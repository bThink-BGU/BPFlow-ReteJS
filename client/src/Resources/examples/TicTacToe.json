{"id":"b964bc8a-554c-481f-86fd-801134f4b842@0.1.0","nodes":{"7":{"id":7,"data":{"code":"let events = [];\nfor(let i=0; i<3; i++){\n  for(let j=0; j<3; j++){\n\tevents.push({\"i\":i, \"j\": j});\n  }\n}\noutputs[\"Output\"] = events;","payloadView":{},"color":"BRIGHTGRAY"},"inputs":{},"outputs":{"Output":{"connections":[{"node":9,"input":"input","data":{"pins":[]}},{"node":10,"input":"input","data":{"pins":[]}},{"node":13,"input":"input","data":{"pins":[]}}]}},"position":[-57.72561621493453,316.6826741050588],"name":"Start"},"9":{"id":9,"data":{"payloadView":{},"color":"BRIGHTGRAY","request":"{\"name\": \"X\", \"data\": \"payload\"}"},"inputs":{"input":{"connections":[{"node":7,"output":"Output","data":{"pins":[]}}]}},"outputs":{"Output":{"connections":[]}},"position":[536.6360594274323,33.578000667573136],"name":"Bsync"},"10":{"id":10,"data":{"payloadView":{},"color":"BRIGHTGRAY","request":"{\"name\": \"O\", \"data\": \"payload\"}"},"inputs":{"input":{"connections":[{"node":7,"output":"Output","data":{"pins":[]}}]}},"outputs":{"Output":{"connections":[]}},"position":[532.8789650089177,266.3172573500781],"name":"Bsync"},"11":{"id":11,"data":{"payloadView":{},"color":"BRIGHTGRAY","wait":"payload.waitFor","block":"payload.block"},"inputs":{"input":{"connections":[{"node":12,"output":"Output","data":{"pins":[]}},{"node":45,"output":"Output","data":{"pins":[]}}]}},"outputs":{"Output":{"connections":[{"node":12,"input":"input","data":{"pins":[]}}]}},"position":[508.7075385799614,896.9630279157642],"name":"Bsync"},"12":{"id":12,"data":{"payloadView":{},"color":"BRIGHTGRAY","block":"payload.waitFor","wait":"payload.block"},"inputs":{"input":{"connections":[{"node":11,"output":"Output","data":{"pins":[]}}]}},"outputs":{"Output":{"connections":[{"node":11,"input":"input","data":{"pins":[]}}]}},"position":[961.1371508814842,906.9709003648389],"name":"Bsync"},"13":{"id":13,"data":{"payloadView":{},"color":"BRIGHTGRAY","wait":"[{\"name\": \"X\", \"data\": \"payload\"}, {\"name\": \"O\", \"data\": \"payload\"}]","block":""},"inputs":{"input":{"connections":[{"node":7,"output":"Output","data":{"pins":[]}}]}},"outputs":{"Output":{"connections":[{"node":28,"input":"input","data":{"pins":[]}}]}},"position":[485.29707607188584,560.432900253301],"name":"Bsync"},"28":{"id":28,"data":{"payloadView":{},"color":"BRIGHTGRAY","block":"[{\"name\": \"X\", \"data\": \"payload\"}, {\"name\": \"O\", \"data\": \"payload\"}]"},"inputs":{"input":{"connections":[{"node":13,"output":"Output","data":{"pins":[]}}]}},"outputs":{"Output":{"connections":[]}},"position":[943.8434173539753,588.834729510722],"name":"Bsync"},"45":{"id":45,"data":{"code":"//let XSet = bp.EventSet(\"\",function(e){ return e.name.equals(\"X\")});\n//let OSet = bp.EventSet(\"\",function(e){ return e.name.equals(\"O\")});\nlet XSet = [];\nlet OSet = [];\n\nfor(let i=0; i<3; i++){\n  for(let j=0; j<3; j++){\n\tXSet.push(bp.Event(\"X\", {\"i\":i, \"j\": j}));\n    OSet.push(bp.Event(\"O\", {\"i\":i, \"j\": j}));\n  }\n}\n\noutputs[\"Output\"] =  {waitFor: XSet, block: OSet};","payloadView":{},"color":"BRIGHTGRAY"},"inputs":{},"outputs":{"Output":{"connections":[{"node":11,"input":"input","data":{"pins":[]}}]}},"position":[47.99678366173138,894.4920221179068],"name":"Start"}}}